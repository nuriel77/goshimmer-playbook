- name: set variables centos
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  when: ansible_distribution in redhat_family_list
  tags: always

- name: set variables ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
  when: ansible_distribution in debian_family_list
  tags: always

- name: scripts block
  block:

    - name: copy gosc
      copy:
        src: files/gosc
        dest: /usr/bin/gosc
        mode: 0755
        owner: root
        group: root

    - name: download ps_mem
      get_url:
        url: https://raw.githubusercontent.com/pixelb/ps_mem/master/ps_mem.py
        dest: /usr/bin/ps_mem
        mode: 0755
      ignore_errors: yes

    - name: ensure ~/.gosc exists
      copy:
        dest: "{{ ansible_env.HOME }}/.gosc"
        content: ""
        force: no

    - name: copy status screen run script
      copy:
        src: files/run-screen.sh
        dest: /usr/bin/run-screen
        mode: 0755
        owner: root
        group: root

    - name: link python3 to python
      file:
        src: /usr/bin/python3
        dest: /usr/bin/python
        force: no
        state: link
      when:
        - ansible_distribution == "CentOS"
        - ansible_distribution_major_version == '8'

  tags:
    - scripts

- name: allow IPv4 forwarding in kernel
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes

#- name: clone goshimmer repository
#  git:
#    repo: '{{ goshimmer_git_url }}'
#    dest: '{{ goshimmer_git_dest }}'

# Clone goshimmer
#- name: get latest goshimmer git commit
#  shell: "cd {{ goshimmer_git_dest }} && git rev-parse --short HEAD"
#  register: shimmer_commit_hash
#  changed_when: false

#- name: set goshimmer image tag
#  set_fact:
#    goshimmer_tag: "{{ shimmer_commit_hash.stdout }}"

- name: goshimmer source code
  tags:
    - goshimmer_source
    - build_goshimmer_image
  block:

    - name: get latest goshimmer release
      uri:
        url: "{{ goshimmer_releases_url }}/latest"
        return_content: yes
      register: goshimmer_release_json

    - name: get release tag
      set_fact:
        goshimmer_tag: >-
          {%- if goshimmer_version == 'latest' -%}
            {{ goshimmer_release_json.content | from_json | json_query('tag_name') }}
          {%- else -%}
            {%- if goshimmer_version[0] != 'v' -%}v{%- endif -%}{{ goshimmer_version }}
          {%- endif -%}
    - name: clone goshimmer repository
      git:
        repo: '{{ goshimmer_git_url }}'
        dest: '{{ goshimmer_git_dest }}'
        version: '{{ goshimmer_tag }}'

# User
- name: add user to run goshimmer as
  user:
    name: "{{ goshimmer_user }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ goshimmer_home_path }}"
  tags:
    - goshimmer_user

- name: get goshimmer user uid
  shell: "echo -n $(id -u {{ goshimmer_user }})"
  changed_when: false
  register: goshimmer_uid
  tags:
    - goshimmer_create_container
    - get_goshimmer_uid

- name: goshimmer paths
  file:
    state: directory
    mode: 0700
    owner: "{{ goshimmer_user }}"
    group: "{{ goshimmer_group }}"
    path: "{{ item }}"
  with_items:
    - "{{ goshimmer_home_path }}"
    - "{{ goshimmber_db_path }}"

- name: goshimmer config
  template:
    src: templates/goshimmer.config.json.j2
    dest: "{{ goshimmer_home_path }}/config.json"
    mode: 0600
    owner: "{{ goshimmer_user }}"
    group: "{{ goshimmer_group }}"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart goshimmer
  tags:
    - goshimmer_config_file

# Goshimmer system config
- name: copy goshimmer environment config file
  template:
    src: templates/goshimmer.sysconfig.j2
    dest: "{{ config_dir }}/goshimmer"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - start goshimmer
    - restart goshimmer

- name: copy goshimmer systemd file
  template:
    src: templates/goshimmer.service.j2
    dest: "{{ systemd_dir }}/goshimmer.service"
  tags:
    - goshimmer_service_file
  notify:
    - start goshimmer
    - restart goshimmer

# Image
- name: build goshimmer image task
  import_tasks: image-goshimmer.yml
